class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort()
        left = 0
        current = 1
        right = len(nums) - 1
        result = []
        
        
        while left <= len(nums) - 3:
            while current < right:
                temp = nums[left] + nums[right] + nums[current]
                if temp == 0:
                    t = [nums[left], nums[right], nums[current]]
                    result.append(t)
                    while current< right and nums[current] == nums[current + 1]:
                        current = current + 1
                    while current < right and nums[right] == nums[right - 1]:
                        right = right - 1
                    current = current + 1
                elif temp > 0:
                    right = right - 1
                else:
                    current = current + 1
            while left <= len(nums) - 3 and nums[left] == nums[left + 1]:
                left = left + 1
            left = left + 1
            current = left + 1
            right = len(nums) - 1
        return result
