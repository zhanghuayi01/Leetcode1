class Solution(object):
    def gameOfLife(self, board):
        """
        :type board: List[List[int]]
        :rtype: void Do not return anything, modify board in-place instead.
        0:dead,2:dead to live
        1:live,3:live to die
        """
        
        for i in xrange(len(board)):
            for j in xrange(len(board[0])):
                if board[i][j] == 1:
                    if not (self.count(i,j,board) == 2 or self.count(i,j,board) == 3):
                        board[i][j] = 3
                else:
                    if self.count(i,j,board) == 3:
                        board[i][j] = 2
        
        for i in xrange(len(board)):
            for j in xrange(len(board[0])):
                if board[i][j] == 2: board[i][j] = 1
                if board[i][j] == 3: board[i][j] = 0
                
    def count(self,i,j,board):
        res = 0
        l1,l2 = len(board),len(board[0])
        if 0<= i-1 and 0<= j -1: res += board[i-1][j-1]%2
        if 0<= i-1 and l2> j + 1: res += board[i-1][j+1]%2
        if l1 >i+1 and 0<= j-1: res += board[i+1][j-1]%2
        if l1 >i+1 and l2> j+1: res += board[i+1][j+1]%2
        if 0<= j -1: res += board[i][j-1]%2
        if l2>j+1: res += board[i][j+1]%2
        if 0<= i-1: res += board[i-1][j]%2
        if l1 > i+1: res += board[i+1][j]%2
        return res
