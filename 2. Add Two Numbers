# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

        

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        last = 0
        root = ListNode(0)
        head = root
        while l1 or l2:
            if not l1: l1 = ListNode(0)
            if not l2: l2 = ListNode(0)
            value,last = (l1.val + l2.val+last)%10,(l1.val + l2.val+last)/10
            
            l1,l2 = l1.next,l2.next
            head.next = ListNode(value)
            head = head.next
        if last: head.next = ListNode(last)
        return root.next
