# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def longestConsecutive(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root: return 0
        self.res = 0
        def helper(node,parent):
            if not node: return 0,0
            lb,ls = helper(node.left,node)
            rb,rs = helper(node.right,node)
            self.res = max(self.res,ls+rb+1,lb+rs+1)
            if node.val == parent.val - 1:
                return 0,max(ls,rs) + 1
            elif node.val == parent.val + 1:
                return max(lb,rb) + 1,0
            else:
                return 0,0
        helper(root,root)
        return self.res
            
