class ZigzagIterator(object):

    def __init__(self, v1, v2):
        """
        Initialize your data structure here.
        :type v1: List[int]
        :type v2: List[int]
        """
        self.lst = [v1,v2]
        self.i = 0
        self.j = 0
        while self.j > len(self.lst[self.i])-1 and self.j < max(len(self.lst[0]),len(self.lst[1])):
            if self.i < len(self.lst)-1:
                self.i += 1
            else:
                self.i = 0
                self.j += 1

    def next(self):
        """
        :rtype: int
        """
        res = self.lst[self.i][self.j]
        if self.i < len(self.lst)-1:
            self.i += 1
        else:
            self.i = 0
            self.j += 1
        while self.j > len(self.lst[self.i])-1 and self.j < max(len(self.lst[0]),len(self.lst[1])):
            if self.i < len(self.lst)-1:
                self.i += 1
            else:
                self.i = 0
                self.j += 1
        
        return res

    def hasNext(self):
        """
        :rtype: bool
        """
        if self.j < max(len(self.lst[0]),len(self.lst[1])):return True
        else:return False

# Your ZigzagIterator object will be instantiated and called as such:
# i, v = ZigzagIterator(v1, v2), []
# while i.hasNext(): v.append(i.next())
