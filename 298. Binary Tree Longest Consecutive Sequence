# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def longestConsecutive(self, root):
        if not root:
            return 0
        ans, stack = 0, [[root, 1]]
        while stack:
            node, length = stack.pop()
            ans = max(ans, length)
            for child in [node.left, node.right]:
                if child:
                    l = length + 1 if child.val == node.val + 1 else 1
                    stack.append([child, l])
        return ans
