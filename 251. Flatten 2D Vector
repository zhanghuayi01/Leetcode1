class Vector2D(object):

    def __init__(self, vec2d):
        """
        Initialize your data structure here.
        :type vec2d: List[List[int]]
        """
        self.lst = vec2d
        x,y = 0,0
        while x < len(self.lst) and not self.lst[x]: x += 1
        self.pointers = (x,y)

    def next(self):
        """
        :rtype: int
        """
        x,y = self.pointers
        res = self.lst[x][y]
        if y < len(self.lst[x])-1: y += 1
        else:
            x += 1
            while x < len(self.lst) and not self.lst[x]: x += 1
            y = 0
        self.pointers = (x,y)
        return res

    def hasNext(self):
        """
        :rtype: bool
        """
        x,y = self.pointers
        if x < len(self.lst) -1 or (x == len(self.lst) -1 and y < len(self.lst[x])): return True
        else: return False

# Your Vector2D object will be instantiated and called as such:
# i, v = Vector2D(vec2d), []
# while i.hasNext(): v.append(i.next())
